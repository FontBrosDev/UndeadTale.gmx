<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_frisk_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//Starting Sprite Variables
image_speed = 0;
image_xscale = 2;
image_yscale = 2;
//Movement Variables
vsp = 6;
hsp = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
//Get Inputs
mv_up = keyboard_check(vk_up);
mv_down = keyboard_check(vk_down);
mv_left = keyboard_check(vk_left);
mv_right = keyboard_check(vk_right);
//Movement
//Horizontal Movement
if mv_left &amp;&amp; !mv_right {
    //Collision Checking
    if place_meeting(x-hsp,y,obj_solid) {
        while(!place_meeting(x-hsp,y,obj_solid)) {
            x -= 1;
        }
    }else {
        x -= hsp;
    }
}
if mv_right &amp;&amp; !mv_left {
    //Collision Checking
    if place_meeting(x+hsp,y,obj_solid) {
        while(!place_meeting(x+hsp,y,obj_solid)) {
            x += 1;
        }
    }else {
        x += hsp;
    }
}
//Vertical Movement
if mv_down &amp;&amp; !mv_up {
    //Collision Checking
    if place_meeting(x,y+vsp,obj_solid) {
        while(!place_meeting(x,y+vsp,obj_solid)) {
            y += 1;
        }
    }else {
        y += vsp;
    }
    //Animation
    if place_meeting(x,y+5,obj_solid) {
        sprite_index = spr_frisk_walk_down;
        image_index = 0;
        image_speed = 0;
    }else {
        sprite_index = spr_frisk_walk_down;
        image_speed = 0.2;
    }
}
if mv_up &amp;&amp; !mv_down {
    //Collision Checking
    if place_meeting(x,y-vsp,obj_solid) {
        while(!place_meeting(x,y-vsp,obj_solid)) {
            y -= 1;
        }
    }else {
        y -= vsp;
    }
    //Animation
    if place_meeting(x,y-5,obj_solid) {
        sprite_index = spr_frisk_walk_up;
        image_index = 0;
        image_speed = 0;
    }else {
        sprite_index = spr_frisk_walk_up;
        image_speed = 0.2;
    }
}
//Horizontal Animation Fix
if mv_left &amp;&amp; !mv_right &amp;&amp; !mv_down &amp;&amp; !mv_up {
    if place_meeting(x-5,y,obj_solid) {
        sprite_index = spr_frisk_walk_left;
        image_index = 0;
        image_speed = 0;
    }else {
        sprite_index = spr_frisk_walk_left;
        image_speed = 0.2;
    }
}
if mv_right &amp;&amp; !mv_left &amp;&amp; !mv_down &amp;&amp; !mv_up {
    if place_meeting(x+5,y,obj_solid) {
        sprite_index = spr_frisk_walk_right;
        image_index = 0;
        image_speed = 0;
    }else {
        sprite_index = spr_frisk_walk_right;
        image_speed = 0.2;
    }
}
//Animation Stopping
if !mv_left &amp;&amp; !mv_right &amp;&amp; !mv_down &amp;&amp; !mv_up {
    image_index = 0;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
